{"version":3,"sources":["hooks/useFetch.js","components/Error.js","components/Loading.js","hooks/useForm.js","helpers/isValidFormSingersSongsForm.js","components/SingersSongsForm/Input.js","components/SingersSongsForm/SubmitButton.js","components/SingersSongsForm/Title.js","components/SingersSongsForm.js","components/Singer/BiopicSinger.js","components/Singer/SocialSinger.js","components/Singer.js","components/Song.js","components/SearchAgain.js","SingersSongsSearch.js","index.js"],"names":["useFetch","singer","song","isMountedRef","useRef","useState","data","loading","error","state","setState","useEffect","current","a","getSinger","fetch","encodeURI","requestSinger","json","responseSinger","getSong","requestSong","responseSong","Promise","all","singerAPI","songAPI","artists","lyrics","lyricSong","infoArtist","getSingerSong","Error","className","Loading","useForm","initialState","formValues","setFormValues","handleInputChange","event","target","name","value","reset","newState","isValidFormSingersSongsForm","trim","length","validator","isEmpty","isAlpha","ignore","errorSingersSongs","isValid","Input","label","placeholder","htmlFor","type","id","onChange","SubmitButton","React","memo","disabled","Title","title","SingersSongsForm","containerForm","setSearch","setError","setDisabled","ref","autoComplete","onSubmit","preventDefault","escapedSinger","escape","escapedSong","BiopicSinger","enBiopic","esBiopic","genre","image","src","alt","SocialSinger","facebook","twitter","href","rel","Singer","strArtist","strArtistThumb","strBiographyEN","strBiographyES","strFacebook","strGenre","strTwitter","Song","SearchAgain","onClick","scrollIntoView","behavior","SingersSongsSearch","search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11d01e84.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\n\r\nconst useFetch = ( singer, song ) => {\r\n    const isMountedRef = useRef( true );\r\n    const [ state, setState ] = useState( { data: {}, loading: false, error: null } );\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            isMountedRef.current = false;\r\n        }\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        if( singer !== '' && song !== '' ) {\r\n            setState( { data: {}, loading: true, error: null } );\r\n\r\n            const getSingerSong = async() => {\r\n                try{\r\n                    const getSinger = async() => {\r\n                        const requestSinger = await fetch( `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${ encodeURI( singer ) }` );\r\n                        const responseSinger = await requestSinger.json();\r\n\r\n                        return responseSinger;\r\n                    };\r\n\r\n                    const getSong = async() => {\r\n                        const requestSong = await fetch( `https://api.lyrics.ovh/v1/${ encodeURI( singer ) }/${ encodeURI( song ) }` );\r\n                        const responseSong = await requestSong.json();\r\n\r\n                        return responseSong;\r\n                    };\r\n\r\n                    const [ singerAPI, songAPI ] = await Promise.all( [\r\n                        getSinger(),\r\n                        getSong()\r\n                    ] );\r\n               \r\n                    if( !singerAPI.artists ) {\r\n                        isMountedRef.current\r\n                            &&\r\n                        setState( {\r\n                            data: {},\r\n                            loading: false,\r\n                            error: 'No se pudo obtener el artista.'\r\n                        } );\r\n                    } else if( songAPI.error || songAPI.lyrics === '' ) {\r\n                        isMountedRef.current\r\n                            &&\r\n                        setState( {\r\n                            data: {},\r\n                            loading: false,\r\n                            error: 'No se pudo obtener la canci√≥n.'\r\n                        } );\r\n                    } else {\r\n                        isMountedRef.current\r\n                            &&\r\n                        setState( {\r\n                            data: {\r\n                                lyricSong: songAPI.lyrics,\r\n                                infoArtist: singerAPI.artists[ 0 ]\r\n                            },\r\n                            loading: false,\r\n                            error: null\r\n                        } );\r\n                    }  \r\n                } catch( err ) {\r\n                    setState( { data: {}, loading: false, error: err } );\r\n                }\r\n            }\r\n\r\n            getSingerSong();\r\n        }\r\n    }, [ singer, song ] );\r\n\r\n    return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ( { singer, song } ) => {\r\n    return (\r\n        <>\r\n            <div className=\"container-error\">\r\n                <p>\r\n                    No se obtuvieron resultados para:\r\n                </p>\r\n                \r\n                <ul>\r\n                    <li>Artista <span>{ singer }</span></li>\r\n                    <li>Canci√≥n <span>{ song }</span></li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nError.propTypes = {\r\n    singer: PropTypes.string.isRequired,\r\n    song: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"container-loading\">\r\n            <div className=\"sk-circle\">\r\n                <div className=\"sk-circle1 sk-child\"></div>\r\n                <div className=\"sk-circle2 sk-child\"></div>\r\n                <div className=\"sk-circle3 sk-child\"></div>\r\n                <div className=\"sk-circle4 sk-child\"></div>\r\n                <div className=\"sk-circle5 sk-child\"></div>\r\n                <div className=\"sk-circle6 sk-child\"></div>\r\n                <div className=\"sk-circle7 sk-child\"></div>\r\n                <div className=\"sk-circle8 sk-child\"></div>\r\n                <div className=\"sk-circle9 sk-child\"></div>\r\n                <div className=\"sk-circle10 sk-child\"></div>\r\n                <div className=\"sk-circle11 sk-child\"></div>\r\n                <div className=\"sk-circle12 sk-child\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import { useState } from 'react';\r\n\r\nconst useForm = ( initialState = {} ) => {\r\n    const [ formValues, setFormValues ] = useState( initialState );\r\n\r\n    const handleInputChange = ( event ) => {\r\n        setFormValues( {\r\n            ...formValues,\r\n            [ event.target.name ]: event.target.value\r\n        } );\r\n    };\r\n\r\n    const reset = ( newState = initialState ) => {\r\n        setFormValues( newState );\r\n    };\r\n\r\n    return [ formValues, handleInputChange, reset ];\r\n};\r\n\r\nexport default useForm;\r\n","import validator from 'validator';\r\n\r\nconst isValidFormSingersSongsForm = ( singer, song ) => {\r\n    if( singer.trim().length < 2 || validator.isEmpty( singer ) || !validator.isAlpha( singer, [ 'es-ES' ], { ignore: ' 1234567890' } ) ) {\r\n        return {\r\n            errorSingersSongs: 'Todos los campos son obligatorios.',\r\n            isValid: false\r\n        };\r\n    } else if( song.trim().length < 2 || validator.isEmpty( song ) || !validator.isAlpha( song, [ 'es-ES' ], { ignore: ' 1234567890' } ) ) {\r\n        return {\r\n            errorSingersSongs: 'Todos los campos son obligatorios.',\r\n            isValid: false\r\n        };\r\n    }\r\n\r\n    return {\r\n        errorSingersSongs: null,\r\n        isValid: true\r\n    };\r\n};\r\n\r\nexport default isValidFormSingersSongsForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ( { error, handleInputChange, label, name, placeholder, value } ) => {\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <div className=\"form-group\">\r\n                <label htmlFor={ name } className=\"form-label\">{ label }</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className={ `form-control ${ error && 'is-invalid' }` }\r\n                    id={ name }\r\n                    name={ name }\r\n                    onChange={ handleInputChange }\r\n                    placeholder={ placeholder }\r\n                    value={ value }\r\n                    \r\n                />\r\n                <div className=\"invalid-feedback\">\r\n                    { error }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nInput.propTypes = {\r\n    error: PropTypes.string.isRequired,\r\n    handleInputChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SubmitButton = React.memo( ( { disabled } ) => {\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col\">\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-submit\"\r\n                    disabled={ disabled }\r\n                >\r\n                    BUSCAR\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n} );\r\n\r\nSubmitButton.propTypes = {\r\n    disabled: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Title = React.memo( ( { title } ) => {\r\n    return (\r\n        <legend className=\"text-center\">\r\n            { title }\r\n        </legend>\r\n    );\r\n} );\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Title;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport validator from 'validator';\r\nimport useForm from '../hooks/useForm';\r\nimport isValidFormSingersSongsForm from '../helpers/isValidFormSingersSongsForm';\r\nimport Input from './SingersSongsForm/Input';\r\nimport SubmitButton from './SingersSongsForm/SubmitButton';\r\nimport Title from './SingersSongsForm/Title';\r\n\r\nconst SingersSongsForm = ( { containerForm, setSearch } ) => {\r\n    const [ formValues, handleInputChange, reset ] = useForm( { singer: '', song: '' } );\r\n    const { singer, song } = formValues;\r\n\r\n    const [ error, setError ] = useState( null );\r\n    const [ disabled, setDisabled ] = useState( false );\r\n\r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n        setDisabled( true );\r\n\r\n        const escapedSinger = validator.escape( singer );\r\n        const escapedSong = validator.escape( song );\r\n\r\n        const { errorSingersSongs, isValid } = isValidFormSingersSongsForm( escapedSinger, escapedSong );\r\n        setError( errorSingersSongs );\r\n\r\n        if( isValid ) {\r\n            setSearch( {\r\n                singer: escapedSinger,\r\n                song: escapedSong\r\n            } );\r\n\r\n            reset();\r\n        }\r\n\r\n        setDisabled( false );\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-secondary\" ref={ containerForm }>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <form className=\"col card text-white bg-transparent mb-2 pt-5 pb-2\" autoComplete=\"off\" onSubmit={ handleSubmit }>\r\n                        <fieldset>\r\n                            <Title title=\"ARTISTAS Y CANCIONES\" />\r\n\r\n                            <div className=\"row\">\r\n                                <Input\r\n                                    name=\"singer\"\r\n                                    label=\"Artista\"\r\n                                    placeholder=\"Buscar artista...\"\r\n                                    value={ singer }\r\n                                    handleInputChange={ handleInputChange }\r\n                                    error={ !error ? '' : error }\r\n                                />\r\n\r\n                                <Input\r\n                                    name=\"song\"\r\n                                    label=\"Canci√≥n\"\r\n                                    placeholder=\"Buscar canci√≥n...\"\r\n                                    value={ song }\r\n                                    handleInputChange={ handleInputChange }\r\n                                    error={ !error ? '' : error }\r\n                                />\r\n                            </div>\r\n\r\n                            <SubmitButton disabled={ disabled } />\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSingersSongsForm.propTypes = {\r\n    containerForm: PropTypes.object.isRequired,\r\n    setSearch: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SingersSongsForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BiopicSinger = ( { enBiopic, esBiopic, genre, image, name } ) => {\r\n    return (\r\n        <div className=\"card-body\">\r\n            <img src={ image } alt={ name }/>\r\n            <p className=\"card-text\">G√©nero: { genre }</p>\r\n\r\n            <h3>Biograf√≠a de { name }</h3>\r\n            <p className=\"card-text text-justify biopic\">\r\n                {\r\n                    esBiopic ? esBiopic : enBiopic\r\n                }\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nBiopicSinger.propTypes = {\r\n    enBiopic: PropTypes.string.isRequired,\r\n    esBiopic: PropTypes.string.isRequired,\r\n    genre: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BiopicSinger;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SocialSinger = ( { facebook, twitter } ) => {\r\n    return (\r\n        <div className=\"card-body\">\r\n            <div className=\"row text-center\">\r\n                <div className=\"col-6\">\r\n                    <a href={ `https://${ facebook }` } target=\"_blank\" rel=\"noopener noreferrer\" className=\"icon\">\r\n                        <i className=\"fab fa-facebook\"></i>\r\n                    </a>\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                    <a href={ `https://${ twitter }` } target=\"_blank\" rel=\"noopener noreferrer\" className=\"icon\">\r\n                        <i className=\"fab fa-twitter\"></i>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSocialSinger.propTypes = {\r\n    facebook: PropTypes.string.isRequired,\r\n    twitter: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SocialSinger;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BiopicSinger from './Singer/BiopicSinger';\r\nimport SocialSinger from './Singer/SocialSinger';\r\n\r\nconst Singer = ( { singer } ) => {\r\n    const { strArtist, strArtistThumb, strBiographyEN, strBiographyES, strFacebook, strGenre, strTwitter } = singer;\r\n\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <div className=\"card border-light\">\r\n                <div className=\"card-header bg-primary text-light font-weight-bold\">\r\n                    Informaci√≥n del artista\r\n                </div>\r\n\r\n                <BiopicSinger\r\n                    enBiopic={ strBiographyEN }\r\n                    esBiopic={ strBiographyES ? strBiographyES : '' }\r\n                    genre={ strGenre }\r\n                    image={ strArtistThumb }\r\n                    name={ strArtist }\r\n                />\r\n\r\n                {\r\n                    ( strFacebook && strTwitter )\r\n                        &&\r\n                    <SocialSinger\r\n                        facebook={ strFacebook }\r\n                        twitter={ strTwitter }\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSinger.propTypes = {\r\n    singer: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Singer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Song = ( { song } ) => {\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <h2>Letra de la canci√≥n</h2>\r\n            <p className=\"lyric\">\r\n                { song }\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nSong.propTypes = {\r\n    song: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Song;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchAgain = ( { containerForm } ) => {\r\n    const handleClick = () => {\r\n        containerForm.current.scrollIntoView( { behavior: 'smooth' } );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    <button className=\"btn btn-primary search-again\" onClick={ handleClick }>\r\n                        Volver a buscar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSearchAgain.propTypes = {\r\n    containerForm: PropTypes.object.isRequired\r\n};\r\n\r\nexport default SearchAgain;\r\n","import React, { useRef, useState } from 'react';\r\nimport useFetch from './hooks/useFetch';\r\nimport Error from './components/Error';\r\nimport Loading from './components/Loading';\r\nimport SingersSongsForm from './components/SingersSongsForm';\r\nimport Singer from './components/Singer';\r\nimport Song from './components/Song';\r\nimport SearchAgain from './components/SearchAgain';\r\n\r\nconst SingersSongsSearch = () => {\r\n    const containerForm = useRef();\r\n\r\n    const [ search, setSearch ] = useState( { singer: '', song: '' } );\r\n    const { singer, song } = search;\r\n\r\n    const { data, loading, error } = useFetch( singer, song );\r\n    const { lyricSong, infoArtist } = data;\r\n\r\n    return (\r\n        <>\r\n            <SingersSongsForm\r\n                setSearch={ setSearch }\r\n                containerForm={ containerForm }\r\n            />\r\n\r\n            { loading && <Loading /> }\r\n\r\n            {\r\n                error\r\n                    &&\r\n                <Error\r\n                    singer={ singer }\r\n                    song={ song }\r\n                />\r\n            }\r\n\r\n            {\r\n                ( lyricSong && infoArtist )\r\n                    &&\r\n                <>\r\n                    <div className=\"container mt-4\">\r\n                        <div className=\"row\">\r\n                            <Singer singer={ infoArtist } />\r\n\r\n                            <Song song={ lyricSong } />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <SearchAgain containerForm={ containerForm } />\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SingersSongsSearch;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootswatch/dist/sketchy/bootstrap.min.css';\r\nimport './index.css';\r\nimport SingersSongsSearch from './SingersSongsSearch';\r\n\r\nReactDOM.render( <SingersSongsSearch />, document.getElementById( 'root' ) );\r\n"],"sourceRoot":""}